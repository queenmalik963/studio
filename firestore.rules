
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    // Users can only read their own profile, but can be read by any authenticated user.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && request.auth.uid == userId;
    }
    
    // Any authenticated user can read rooms and conversations.
    // This is necessary for listing rooms/conversations on the home/list pages.
    match /rooms/{roomId} {
      allow read, create: if isSignedIn();
      allow update: if isSignedIn() && resource.data.ownerId == request.auth.uid;

      // Messages can be created by any authenticated user.
      match /messages/{messageId} {
        allow read, create: if isSignedIn();
      }
    }
    
    match /conversations/{conversationId} {
        allow read: if isSignedIn() && request.auth.uid in resource.data.participants;
        allow create: if isSignedIn();

        // Messages can be created if user is a participant.
        match /messages/{messageId} {
            allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
        }
    }
  }
}
