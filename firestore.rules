
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth.uid != null;
    }

    // Users Collection:
    // - Anyone signed in can read any user's profile (for avatars, names etc.)
    // - A user can only write to their own profile.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && request.auth.uid == userId;

      // Subcollections like 'followers', 'following' can be managed if signed in.
      match /{subcollection}/{docId} {
        allow read, write: if isSignedIn();
      }
    }

    // Rooms Collection:
    // - Anyone signed in can list and get rooms.
    // - Only signed in users can create a room.
    // - Only the room owner can update/delete their room.
    match /rooms/{roomId} {
      allow list, get: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && resource.data.ownerId == request.auth.uid;

      // Messages subcollection:
      // - Anyone signed in can read/write messages in any room.
      match /messages/{messageId} {
        allow read, write: if isSignedIn();
      }
    }
    
    // Conversations Collection:
    // - Only participants of a conversation can read or write to it.
    match /conversations/{conversationId} {
      allow read, write: if isSignedIn() && request.auth.uid in resource.data.participants;
      
      // Messages subcollection within a conversation
      match /messages/{messageId} {
         allow read, write: if isSignedIn() && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants[0] == request.auth.uid || get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants[1] == request.auth.uid;
      }
    }
  }
}
