
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any profile, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;

      // Allow users to manage their own followers/following subcollections
      match /{subcollection}/{docId} {
        allow read, write: if request.auth != null;
      }
    }

    // Logged-in users can read any room. Only the owner can write/update the room.
    match /rooms/{roomId} {
      allow read: if request.auth != null;
      // Allow create for any authenticated user
      allow create: if request.auth != null;
      // Allow update and delete only for the room owner
      allow update, delete: if request.auth != null && resource.data.ownerId == request.auth.uid;
      
      // Logged-in users can read/write messages within any room.
      match /messages/{messageId} {
        allow read, write: if request.auth != null;
      }
    }

    // Conversations can only be read/written by participants.
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participants;

      // Messages within a conversation follow the same rule.
      match /messages/{messageId} {
        allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
      }
    }
  }
}
